{"version":3,"sources":["store/actions/uiActions.js","store/actionTypes.js","serverApi/restApi.js","store/actions/chatActions.js","serverApi/socketClient.js","store/actions/authActions.js","pages/login.js","components/sidePanel.js","components/message.js","components/error.js","components/messagesArea.js","pages/chatUi.js","components/spinner.js","App.js","store/reducers/uiReducer.js","store/reducers/authReducer.js","store/reducers/chatReducer.js","store/store.js","serviceWorker.js","index.js"],"names":["setLoginError","error","type","baseUrl","window","location","origin","post","url","body","headers","fetch","method","JSON","stringify","Object","objectSpread","Content-Type","signup","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","username","password","res","wrap","_context","prev","next","name","sent","status","Error","console","log","abrupt","t0","stop","_x","_x2","apply","this","arguments","login","_ref2","_callee2","_context2","json","_x3","_x4","autoLogin","_ref3","_callee3","token","_context3","Authorization","_x5","getMessages","_ref4","_callee4","from","resData","_context4","concat","messages","parse","join","reverse","_x6","_x7","_x8","updateUsers","users","usersArr","length","map","index","pending","addMessage","message","dispatch","getState","_getState$auth","auth","localStorage","getItem","restApi","setItem","fetchMessages","setAuth","authState","socket","handleNewMessage","chat","activeChat","setPendingMessage","handleConnection","loginData","updateUsersCb","setUserCb","handleMessageCb","io","on","data","push","emit","authData","Login","state","isSignup","rePassword","toggleLogin","_this","props","setSignup","handleChange","event","setState","defineProperty","target","value","handleSubmit","_this$state","preventDefault","validateForm","then","authStateChanged","isLogin","_this$state2","react_default","createElement","className","onSubmit","placeholder","onChange","style","fontSize","color","loginError","onClick","Component","connect","ui","actions","uiActions","socketClient","chatActions","errorMsg","SidePanel","cursor","onLogout","user","onUserClick","key","Message","itsMe","messageFrom","moment","Number","messageTime","fromNow","messageContent","width","MessagesArea","ref","msgBoxRef","components_message","currentUser","onMessageChanged","aria-label","aria-describedby","inputText","onSendMessage","id","components_error","ChatUi","messageInput","handleLogout","logout","handelUserClick","toggleActiveChat","setActiveChat","prevState","handleMessageChange","handleSendMessage","sendMessage","to","content","time","getMsgBoxRef","node","componentDidUpdate","scrollTop","scrollHeight","isAuth","sidePanel","usersList","backgroundColor","messagesArea","removeItem","Date","now","toString","Spinner","App","onAuthStateChanged","history","_this2","_this3","isLoading","spinner","react_router","exact","path","render","chatUi","assign","pages_login","initialState","chatError","reducer","undefined","action","startLoading","stopLoading","setChatError","nextState","produce","draftState","filteredUsers","filter","filterUser","findIndex","mergedArray","updatedArray","i","j","splice","uniqueConcat","userIndex","rootReducer","combineReducers","uiReducer","authReducer","chatReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","Boolean","hostname","match","Root","withRouter","ReactDOM","es","react_router_dom","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19a674ab.chunk.js","sourcesContent":["import *as actionTypes from '../actionTypes'\r\n\r\nexport const startLoading = () => {\r\n  return {\r\n    type: actionTypes.UI_START_LOADING,\r\n  };\r\n};\r\n\r\nexport const stopLoading = () => {\r\n  return {\r\n    type: actionTypes.UI_STOP_LOADING,\r\n  };\r\n};\r\nexport const setSignup = isSignup => {\r\n  return {\r\n    type: actionTypes.IS_SIGNUP,\r\n    isSignup:isSignup\r\n  };\r\n};\r\nexport const setLoginError = error => {\r\n  return {\r\n    type: actionTypes.UI_SET_LOGIN_ERROR,\r\n    error:error\r\n  };\r\n};\r\nexport const setChatError = error => {\r\n  return {\r\n    type: actionTypes.UI_SET_CHAT_ERROR,\r\n    error:error\r\n  };\r\n};\r\n","export const UI_START_LOADING = 'UI_START_LOADING'\r\nexport const UI_STOP_LOADING = 'UI_STOP_LOADING'\r\nexport const UI_SET_LOGIN_ERROR = 'UI_SET_LOGIN_ERROR'\r\nexport const IS_SIGNUP = 'IS_SIGNUP'\r\nexport const SET_AUTH = 'SET_AUTH'\r\nexport const SET_USERS = 'SET_USERS'\r\nexport const SEND_MESSAGE = 'SEND_MESSAGE'\r\nexport const GET_MESSAGES = 'GET_MESSAGES'\r\nexport const SET_PENDING_MESSAGE = 'SET_PENDING_MESSAGE'\r\nexport const SET_ACTIVE_CHAT = 'SET_ACTIVE_CHAT'\r\nexport const UI_SET_CHAT_ERROR = 'UI_SET_CHAT_ERROR'\r\n\r\n\r\n","\r\nlet baseUrl = window.location.origin\r\n//let baseUrl = \"http://localhost:5000\"\r\n\r\n//Api\r\nconst get = (url,headers) => {\r\n  return fetch(baseUrl + url, {method: 'GET',headers:{...headers}})\r\n\r\n}\r\nconst put = (url, body) => {\r\n  return fetch(baseUrl + url, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(body),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  })\r\n}\r\n\r\nconst post = (url, body,headers) => {\r\n  return fetch(baseUrl + url, {\r\n    method: 'POST',\r\n    body: JSON.stringify(body),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...headers\r\n    }\r\n  })\r\n}\r\n\r\n//Calls\r\nexport const signup = async (username,password) => {\r\n  try {\r\n    const res = await put(`/auth/signup`, {name: username, password: password})\r\n    if (res.status === 422) {\r\n      throw new Error(\r\n        'Validation failed. Make sure the email address isn\\'t used yet!'\r\n      )\r\n    }\r\n    if (res.status !== 200 && res.status !== 201) {\r\n      console.log('Error!')\r\n      throw new Error('Creating a user failed!')\r\n    }\r\n    return true\r\n  }\r\n  catch (err) {\r\n    throw (err)\r\n  }\r\n\r\n}\r\nexport const login = async (username,password) => {\r\n  try {\r\n    let res = await post('/auth/login', {name: username, password: password})\r\n    if (res.status === 422) {\r\n      throw new Error('Not a member of ChatBox')\r\n    }\r\n    if (res.status === 401) {\r\n      throw new Error('Wrong password')\r\n    }\r\n    if (res.status !== 200 && res.status !== 201) {\r\n      console.log('Error!', res.status)\r\n      throw new Error('Could not authenticate you!')\r\n    }\r\n    return res.json()\r\n  }\r\n  catch (err) {\r\n    throw (err)\r\n  }\r\n\r\n}\r\n\r\nexport const autoLogin = async (token) => {\r\n  try {\r\n    let res = await post('/auth/autologin', {}, {Authorization: 'Bearer ' + token})\r\n    if (res.status === 401) {\r\n      throw new Error('Validation failed.')\r\n    }\r\n    if (res.status !== 200 && res.status !== 201) {\r\n      throw new Error('Could not authenticate you!')\r\n    }\r\n    return res.json()\r\n  }\r\n  catch (err) {\r\n    throw (err)\r\n  }\r\n\r\n}\r\nexport const getMessages = async (username,from,token) => {\r\n  try {\r\n    let resData\r\n    let  res = await get(`/messages/${username}/${from}`,{Authorization: 'Bearer ' + token})\r\n    if(res.status === 401){\r\n      const error = new Error('unauthorized')\r\n      throw error\r\n    }\r\n    resData = await res.json()\r\n    if(!resData.messages){\r\n\r\n      return []\r\n    }\r\n    return JSON.parse('[' + resData.messages.join(',') + ']').reverse()\r\n  }\r\n  catch (err) {\r\n    throw (err)\r\n  }\r\n}\r\n\r\n","import *as actionTypes from '../actionTypes'\r\nimport * as restApi from '../../serverApi/restApi'\r\nimport {setAuth} from './authActions'\r\n\r\nexport const updateUsers = users => {\r\n  let usersArr = []\r\n  if (users.length !== 0) {\r\n    usersArr = users.map((name, index) => {\r\n      return {username: name, pending: 0}\r\n    })\r\n  }\r\n  return {\r\n    type: actionTypes.SET_USERS,\r\n    users: usersArr,\r\n  }\r\n}\r\nexport const sendMessage = message => {\r\n  return (dispatch,getState) =>{\r\n    const {socket} = getState().auth\r\n    message.time = Date.now().toString()\r\n    let messages = JSON.parse(localStorage.getItem(message.to))\r\n    if (messages) {\r\n      messages.push(message)\r\n    } else {\r\n      messages = [message]\r\n\r\n    }\r\n    localStorage.setItem(message.to, JSON.stringify(messages))\r\n    socket.emit('msg', message)\r\n    dispatch(addMessage(message))\r\n  }\r\n\r\n}\r\nexport const addMessage = (message) =>{\r\n  return {\r\n    type: actionTypes.SEND_MESSAGE,\r\n    message: message,\r\n  }\r\n}\r\nexport const getMessages = (from) => {\r\n  return async (dispatch,getState) => {\r\n    try {\r\n      const {username,token} = getState().auth\r\n      let messages = JSON.parse(localStorage.getItem(from))\r\n      if (!messages) {\r\n        messages = await restApi.getMessages(username,from,token)\r\n        localStorage.setItem(from, JSON.stringify(messages))\r\n      }\r\n      dispatch(fetchMessages(messages))\r\n    } catch (err) {\r\n      if (err.message === 'unauthorized'){\r\n        dispatch(setAuth({\r\n          authState: false,\r\n          username: '',\r\n          token: '',\r\n          socket: {}\r\n        }))\r\n      }\r\n      console.log(err)\r\n    }\r\n\r\n  }\r\n}\r\nexport const fetchMessages = (messages) => {\r\n  return {\r\n    type: actionTypes.GET_MESSAGES,\r\n    messages: messages || []\r\n  }\r\n}\r\nexport const setActiveChat = (activeChat) => {\r\n\r\n  return {\r\n    type: actionTypes.SET_ACTIVE_CHAT,\r\n    activeChat: activeChat\r\n  }\r\n}\r\nexport const handleNewMessage = (from) => {\r\n  return (dispatch,getState) => {\r\n    const {activeChat} = getState().chat\r\n    if (activeChat === from) {\r\n      dispatch(getMessages(from))\r\n    } else {\r\n      dispatch(setPendingMessage(from, 1))\r\n    }\r\n  }\r\n}\r\nexport const setPendingMessage = (from, pending) => {\r\n  return {\r\n    type: actionTypes.SET_PENDING_MESSAGE,\r\n    from: from,\r\n    pending: pending\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import io from 'socket.io-client'\r\n\r\nexport const handleConnection =(loginData,updateUsersCb,setUserCb,handleMessageCb)=>{\r\n\r\n  const socket = io(window.location.origin)\r\n // const socket = io(\"http://localhost:5000\")\r\n  setUserCb(socket)\r\n\r\n  socket.on('users', (data) => {\r\n    let users = JSON.parse(data)\r\n    updateUsersCb(users)\r\n  })\r\n  socket.on('new_message', (data) => {\r\n    let message = JSON.parse(data)\r\n\r\n    let messages = JSON.parse(localStorage.getItem(message.from))\r\n    if (messages) {\r\n\r\n      messages.push(message)\r\n    } else {\r\n      messages = [message]\r\n\r\n    }\r\n    localStorage.setItem(message.from, JSON.stringify(messages))\r\n    handleMessageCb(message.from)\r\n  })\r\n  socket.emit('logged_in', {username: loginData.username})\r\n  updateUsersCb(loginData.users)\r\n  localStorage.setItem('username', loginData.username)\r\n}\r\n","import *as actionTypes from '../actionTypes'\r\nimport * as uiActions from './uiActions'\r\nimport * as chatActions from './chatActions'\r\nimport * as socketClient from '../../serverApi/socketClient'\r\nimport * as restApi from '../../serverApi/restApi'\r\n\r\n\r\nexport const setAuth = authData => {\r\n  return {\r\n    type: actionTypes.SET_AUTH,\r\n    authData: authData,\r\n  }\r\n}\r\nexport const logOut = () => {\r\n  return (dispatch,getState) => {\r\n    const {socket} = getState().auth\r\n    socket.emit(\"logout\")\r\n    dispatch(setAuth({\r\n      authState: false,\r\n      username: '',\r\n      token: '',\r\n      socket: {}\r\n    }))\r\n    localStorage.removeItem('token')\r\n  }\r\n}\r\n\r\nexport const signUp = (username, password) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(uiActions.startLoading())\r\n      dispatch(uiActions.setLoginError(''))\r\n      await restApi.signup(username,password)\r\n      dispatch(uiActions.stopLoading())\r\n      dispatch({type: actionTypes.IS_SIGNUP, isSignup: false})\r\n\r\n    }catch (err) {\r\n      dispatch(uiActions.stopLoading())\r\n      dispatch(uiActions.setLoginError(err.message))\r\n    }\r\n  }\r\n}\r\n\r\nexport const login = (username, password) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(uiActions.startLoading())\r\n      dispatch(uiActions.setLoginError(''))\r\n      const resData = await restApi.login(username,password)\r\n      const token = resData.token\r\n      localStorage.setItem('token', token)\r\n      socketClient.handleConnection(resData,users=>{\r\n        dispatch(chatActions.updateUsers(users))\r\n      },(socket)=>{\r\n        dispatch(setAuth({\r\n          authState: true,\r\n          username: username,\r\n          token: token,\r\n          socket: socket\r\n        }))\r\n      },(from)=>{\r\n        dispatch(chatActions.handleNewMessage(from))\r\n      })\r\n      dispatch(uiActions.stopLoading())\r\n    } catch (err) {\r\n      dispatch(uiActions.stopLoading())\r\n      dispatch(uiActions.setLoginError(err.message))\r\n    }\r\n\r\n  }\r\n}\r\nexport const autoLogin = (token) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(uiActions.startLoading())\r\n      const resData = await restApi.autoLogin(token)\r\n      socketClient.handleConnection(resData,users=>{\r\n        dispatch(chatActions.updateUsers(users))\r\n      },(socket)=>{\r\n        dispatch(setAuth({\r\n          authState: true,\r\n          username: resData.username,\r\n          token: token,\r\n          socket: socket\r\n        }))\r\n      },(from)=>{\r\n        dispatch(chatActions.handleNewMessage(from))\r\n      })\r\n      dispatch(uiActions.stopLoading())\r\n    } catch (e) {\r\n      dispatch(uiActions.stopLoading())\r\n      console.log(e)\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../store/actions'\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    isSignup: false,\r\n    username: '',\r\n    password: '',\r\n    rePassword: '',\r\n  }\r\n\r\n  toggleLogin = () => {\r\n    this.props.setSignup(!this.props.isSignup)\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({[event.target.name]: event.target.value})\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n\r\n    const {username,password} = this.state\r\n\r\n    if (this.props.isSignup) {\r\n      if( this.validateForm(false)){\r\n        this.props.signup(username,password)\r\n      }\r\n    }\r\n    else {\r\n      if( this.validateForm(true)){\r\n        this.props.login(username,password).then(()=>{\r\n          this.props.authStateChanged()\r\n        })\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n  validateForm = (isLogin)=>{\r\n    let error=\"\"\r\n    const {username,password,rePassword} = this.state\r\n    if(password===\"\" ||  username === \"\"){\r\n      error = \"All fields are required\"\r\n    }\r\n    else if (!isLogin && rePassword!==password){\r\n      error=\"The two passwords do not match\"\r\n    }\r\n\r\n    if(error!==\"\"){\r\n      this.props.setLoginError(error)\r\n      return false\r\n    }\r\n    else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"container  \">\r\n\r\n        <div className={'row'}>\r\n\r\n          <div className={'center-form'}>\r\n\r\n            <div className=\"col-sm-12 col-md-10 col-md-offset-1\">\r\n              <p className={'home-logo text-center mt-4 text-muted'}><i className=\"fas fa-cube\"></i> ChatBox</p>\r\n              {/*<i className=\"fas fa-cube\"></i><h2>ChatBox</h2>*/}\r\n              <form onSubmit={this.handleSubmit}>\r\n                <div className=\"form-group input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\"> <i className=\"fa fa-user\"></i> </span>\r\n                  </div>\r\n                  <input name=\"username\"\r\n                         className=\"form-control\"\r\n                         placeholder=\"Username\"\r\n                         type=\"text\"\r\n                         onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"form-group input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\"> <i className=\"fa fa-lock\"></i> </span>\r\n                  </div>\r\n                  <input name={'password'}\r\n                         className=\"form-control\"\r\n                         placeholder=\"Password\"\r\n                         type=\"password\"\r\n                         onChange={this.handleChange}/>\r\n                </div>\r\n                {this.props.isSignup ?\r\n                  <div className=\"form-group input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\"> <i className=\"fa fa-lock\"></i> </span>\r\n                    </div>\r\n                    <input name={'rePassword'}\r\n                           className=\"form-control\"\r\n                           placeholder=\"Repeat password\"\r\n                           type=\"password\"\r\n                           onChange={this.handleChange}/>\r\n                  </div> : null\r\n                }\r\n\r\n                <div className=\"form-group\">\r\n                  <button type=\"submit\"\r\n                          className=\"btn btn-primary btn-block\"> {this.props.isSignup ? 'Create Account' : 'Log In'}</button>\r\n                </div>\r\n              </form>\r\n              <p className=\"text-center my-0\" style={{\"fontSize\":\"0.8rem\",color:\"red\"}}>{this.props.loginError}</p>\r\n              <br/>\r\n              <p className=\"text-center\">\r\n                {this.props.isSignup ? 'Have an account?' : 'Don\\'t have an account?'}\r\n                <button className={'btn btn-link mb-1'}\r\n                        onClick={this.toggleLogin}>\r\n                  {this.props.isSignup ? 'Log In' : 'Signup'}\r\n                </button>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isSignup: state.ui.isSignup,\r\n    loginError:state.ui.loginError\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setSignup: (isSignup)=> dispatch(actions.setSignup(isSignup)),\r\n    login:(username,password)=>dispatch(actions.login(username,password)),\r\n    signup:(username,password)=>dispatch(actions.signUp(username,password)),\r\n    setLoginError:(errorMsg)=>dispatch(actions.setLoginError(errorMsg))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n","import React from 'react'\r\n\r\nconst SidePanel = (props) => (\r\n  <div className=\"container\">\r\n    <div className=\"row\">\r\n      <div className=\"col\">\r\n        <p className={'side-logo text-center mt-4'}><i\r\n          className=\"fas fa-cube\"></i> ChatBox</p>\r\n        <div className=\"dropdown\">\r\n          <button className=\"dropbtn\"><i className=\"fas fa-user mr-3\"></i>{props.username}<i\r\n            className=\"fas fa-angle-down ml-3\"></i>\r\n          </button>\r\n          <div className=\"dropdown-content\">\r\n            <div style={{cursor: 'pointer'}}\r\n                 onClick={props.onLogout}>Log Out<i\r\n              className=\"ml-3 fas fa-sign-out-alt\"></i></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"row\">\r\n      <p className={'mt-3 font-weight-bold text-white text-muted'}>Online users list</p>\r\n    </div>\r\n    {props.users.map((user, index) => {\r\n        return (props.username !== user.username) && (<div\r\n          className={props.activeChat === user.username ? 'active row user-list-item ml-1 ' : 'row user-list-item ml-1 '}\r\n          onClick={() => props.onUserClick(user.username)}\r\n          key={index}>{props.activeChat === user.username ? <i className=\"fas fa-user-ninja mr-3 pt-1 mb-3 my-auto\"></i> :\r\n          <i className=\"far fa-user mr-3 pt-1 mb-3 my-auto\"></i>}{user.username}\r\n          {user.pending !== 0 ?\r\n            <label className=\"badge badge-pill badge-warning ml-auto\">{user.pending}</label> : null} </div>)\r\n      }\r\n    )}\r\n\r\n  </div>\r\n\r\n)\r\n\r\nexport default SidePanel\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment'\r\nconst Message = (props)=>(\r\n  <div className=\"row mt-1\" >\r\n    <div className=\"col-1\">\r\n      {props.itsMe?<i\r\n          className=\"far fa-user mt-2 \"\r\n          style={{\"fontSize\":40}}></i>:\r\n        <i className=\"fas fa-user-ninja mt-2 \"\r\n           style={{\"fontSize\":40}}></i>}\r\n\r\n    </div>\r\n    <div className=\"col-11\">\r\n      <div className=\"row\">\r\n        <p className={\"font-weight-bold text-monospace\"}\r\n           style={{\"fontSize\":12}}>{props.messageFrom}</p>\r\n\r\n        <p className={\"text-muted ml-1 font-italic\"}\r\n           style={{\"fontSize\":12}}>{moment(Number(props.messageTime)).fromNow()}</p>\r\n      </div>\r\n      <div className=\"row\">\r\n        <p style={{\"fontSize\":12}}>{props.messageContent}</p>\r\n\r\n      </div>\r\n    </div>\r\n    <hr style={{width:\"80%\"}}/>\r\n  </div>\r\n)\r\n\r\nMessage.propTypes ={\r\n  messageFrom:PropTypes.string,\r\n  messageTime:PropTypes.string,\r\n  messageContent:PropTypes.string,\r\n  itsMe:PropTypes.bool\r\n}\r\n\r\n\r\nexport default Message\r\n","import React from 'react'\r\n\r\nconst Error = ()=>(\r\n\r\n  <div className=\"row \">\r\n    {/*<p className={'lead error'}>sdsdsdssdds</p>*/}\r\n  </div>\r\n\r\n)\r\n\r\nexport default Error\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Message from './message'\r\nimport Error from './error'\r\nconst MessagesArea = (props) => (\r\n  <div className=\"container chat-panel\">\r\n    <div className=\"row \">\r\n      <div className=\"col-12 mt-3 chat-header\">\r\n        <p className={'mt-3'}>Chatting with <i className=\"fas fa-long-arrow-alt-right mr-2\"></i>{props.activeChat}</p>\r\n      </div>\r\n    </div>\r\n    <div className=\"row \">\r\n      <div className=\"col-12 mt-3 chat-area \" ref={props.msgBoxRef}>\r\n        {props.messages.map((message, index) =>\r\n          <Message key={index}\r\n                   messageFrom={message['from']}\r\n                   messageContent={message['content']}\r\n                   messageTime={message['time']}\r\n                   itsMe={props.currentUser === message['from']}/>\r\n        )}\r\n\r\n      </div>\r\n    </div>\r\n    <div className=\"row \">\r\n      <div className=\"input-group mb-3 mt-5\">\r\n        <input type=\"text\"\r\n               className=\"form-control\"\r\n               onChange={props.onMessageChanged}\r\n               aria-label=\"Example text with button addon\"\r\n               aria-describedby=\"button-addon1\"\r\n               value={props.inputText}\r\n        />\r\n        <div className=\"input-group-append\">\r\n          <button onClick={props.onSendMessage}\r\n                  className=\"btn btn-outline-primary\"\r\n                  type=\"button\"\r\n                  id=\"button-addon1\">Send\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    <Error/>\r\n  </div>\r\n\r\n)\r\n\r\nMessagesArea.propTypes = {\r\n  onSendMessage: PropTypes.func,\r\n  onMessageChanged: PropTypes.func,\r\n  activeChat: PropTypes.string,\r\n  messages: PropTypes.array,\r\n  currentUser: PropTypes.string,\r\n  inputText: PropTypes.string,\r\n  msgBoxRef: PropTypes.func\r\n}\r\n\r\nexport default MessagesArea\r\n","import React, { Component } from 'react'\r\nimport SidePanel from '../components/sidePanel'\r\nimport MessagesArea from '../components/messagesArea'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../store/actions'\r\n\r\nclass ChatUi extends Component {\r\n  state = {\r\n    messageInput: ''\r\n  }\r\n  msgBoxRef = {}\r\n  handleLogout = async () => {\r\n    await this.props.logout()\r\n    this.props.authStateChanged()\r\n  }\r\n  handelUserClick = (username) => {\r\n\r\n    this.toggleActiveChat(username)\r\n    this.props.getMessages(username)\r\n  }\r\n\r\n  toggleActiveChat = username => {\r\n    this.props.setActiveChat(username)\r\n    this.props.setPendingMessage(username, 0)\r\n    this.setState((prevState) => {\r\n      return {...prevState, messageInput: ''}\r\n    })\r\n\r\n  }\r\n  handleMessageChange = event => {\r\n    let value = event.target.value\r\n\r\n    this.setState((prevState) => {\r\n      return {...prevState, messageInput: value}\r\n    })\r\n  }\r\n  handleSendMessage = () => {\r\n    if (this.state.messageInput !== '') {\r\n      this.props.sendMessage({\r\n        from: this.props.currentUser,\r\n        to: this.props.activeChat,\r\n        content: this.state.messageInput,\r\n        time: ''\r\n      })\r\n      this.setState((prevState) => {\r\n        return {...prevState, messageInput: ''}\r\n      })\r\n    }\r\n  }\r\n  getMsgBoxRef = (node) => {\r\n    this.msgBoxRef = node\r\n  }\r\n  componentDidUpdate = () => {\r\n    this.msgBoxRef.scrollTop = this.msgBoxRef.scrollHeight\r\n  }\r\n\r\n  render () {\r\n    if(!this.props.isAuth){\r\n      this.props.authStateChanged()\r\n    }\r\n    return (\r\n      <div className=\"row chatUi\" style={{width: '100vw'}}>\r\n        <div className=\"col-md-3  side-panel\">\r\n          <SidePanel activeChat={this.props.activeChat}\r\n                     onUserClick={this.handelUserClick}\r\n                     onLogout={this.handleLogout}\r\n                     users={this.props.usersList}\r\n                     username={this.props.currentUser}/>\r\n        </div>\r\n        <div className=\"col-md-9\" style={{'backgroundColor': '#eee'}}>\r\n          {this.props.activeChat !== '' ?\r\n            <MessagesArea messages={this.props.messages}\r\n                          activeChat={this.props.activeChat}\r\n                          onMessageChanged={this.handleMessageChange}\r\n                          onSendMessage={this.handleSendMessage}\r\n                          currentUser={this.props.currentUser}\r\n                          inputText={this.state.messageInput}\r\n                          msgBoxRef={this.getMsgBoxRef}\r\n            /> : null}\r\n\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuth:state.auth.isAuth,\r\n    usersList: state.chat.users,\r\n    currentUser: state.auth.username,\r\n    messages: state.chat.messages,\r\n    activeChat: state.chat.activeChat\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logout: () => dispatch(actions.logOut()),\r\n    sendMessage: (message) => dispatch(actions.sendMessage(message)),\r\n    getMessages: (from) => dispatch(actions.getMessages(from)),\r\n    setActiveChat: (activeChat) => dispatch(actions.setActiveChat(activeChat)),\r\n    setPendingMessage: (from, pending) => dispatch(actions.setPendingMessage(from, pending))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatUi)\r\n\r\n","import React from 'react'\r\n\r\nconst Spinner = ()=>(\r\n  <div className=\"spinner-border spinner\"></div>\r\n)\r\n\r\nexport default Spinner\r\n","import React, { Component } from 'react'\nimport Login from './pages/login'\nimport ChatUi from './pages/chatUi'\nimport {Switch, Route,  } from 'react-router-dom'\nimport './App.css'\nimport * as actions from './store/actions'\nimport { connect } from 'react-redux'\nimport Spinner from './components/spinner'\n\nclass App extends Component {\n  state = {\n    auth: false\n  }\n  onAuthStateChanged = () => {\n    if (this.props.isAuth) {\n      this.props.history.push('/')\n    } else {\n      this.props.history.push('/login')\n    }\n  }\n\n  componentDidMount () {\n    const token = localStorage.getItem('token')\n    if (token) {\n      this.props.autoLogin(token).then(() => {\n        this.onAuthStateChanged()\n      })\n    }\n    this.onAuthStateChanged()\n  }\n\n  render () {\n\n    return (\n      (this.props.isLoading ) ? <Spinner/> :\n        <Switch>\n          <Route exact path=\"/\" render={(props) => <ChatUi {...props} authStateChanged={this.onAuthStateChanged}/>}/>\n          <Route path=\"/login\" render={(props) => <Login {...props} authStateChanged={this.onAuthStateChanged}/>}/>\n        </Switch>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.isAuth,\n    isLoading: state.ui.isLoading\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAuth: (authState) => dispatch(actions.setAuth(authState)),\n    autoLogin: (token) => dispatch(actions.autoLogin(token))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\n","import * as actionTypes from '../actionTypes'\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isSignup:false,\r\n  loginError:\"\",\r\n  chatError:\"\",\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  if (action.type === actionTypes.UI_START_LOADING) {\r\n    return startLoading(state, action)\r\n  }\r\n  else if (action.type === actionTypes.UI_STOP_LOADING) {\r\n    return stopLoading(state, action)\r\n  }\r\n  else if (action.type === actionTypes.IS_SIGNUP) {\r\n    return setSignup(state, action.isSignup)\r\n  }\r\n  else if (action.type === actionTypes.UI_SET_LOGIN_ERROR) {\r\n    return setLoginError(state, action.error)\r\n  }\r\n  else if (action.type === actionTypes.UI_SET_CHAT_ERROR) {\r\n    return setChatError(state, action.error)\r\n  }\r\n  else {\r\n    return state\r\n  }\r\n}\r\n\r\nfunction startLoading (state, action) {\r\n  return {\r\n    ...state,\r\n    isLoading: true\r\n  }\r\n}\r\nfunction stopLoading (state, action) {\r\n  return {\r\n    ...state,\r\n    isLoading: false\r\n  }\r\n}\r\nfunction setSignup (state, isSignup) {\r\n  return {\r\n    ...state,\r\n    isSignup: isSignup,\r\n    loginError:\"\"\r\n  }\r\n}\r\nfunction setLoginError (state, error) {\r\n  return {\r\n    ...state,\r\n    loginError: error\r\n  }\r\n}\r\nfunction setChatError (state, error) {\r\n  return {\r\n    ...state,\r\n    chatError: error\r\n  }\r\n}\r\nexport default reducer\r\n","import * as actionTypes from '../actionTypes'\r\n\r\nconst initialState = {\r\n  token:\"\",\r\n  username:\"\",\r\n  isAuth:false,\r\n  socket:{}\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  if (action.type === actionTypes.SET_AUTH) {\r\n\r\n    return setAuth(state, action.authData)\r\n  }\r\n  else {\r\n    return state\r\n  }\r\n}\r\n\r\nfunction setAuth (state,authData) {\r\n  return {\r\n\r\n    token:authData.token,\r\n    username:authData.username,\r\n    isAuth: authData.authState,\r\n    socket:authData.socket\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import * as actionTypes from '../actionTypes'\r\nimport produce from 'immer'\r\n\r\nconst initialState = {\r\n  users: [],\r\n  messages: [],\r\n  activeChat: ''\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  if (action.type === actionTypes.SET_USERS) {\r\n    return updateUsers(state, action.users)\r\n  }\r\n  else if (action.type === actionTypes.SEND_MESSAGE) {\r\n    return sendMessage(state, action.message)\r\n  }\r\n  else if (action.type === actionTypes.GET_MESSAGES) {\r\n    return getMessages(state, action.messages)\r\n  }\r\n  else if (action.type === actionTypes.SET_PENDING_MESSAGE) {\r\n    return setPendingMessage(state, action.from, action.pending)\r\n  }\r\n  else if (action.type === actionTypes.SET_ACTIVE_CHAT) {\r\n    return setActiveChat(state, action.activeChat)\r\n  }\r\n  else {\r\n    return state\r\n  }\r\n}\r\n\r\nfunction updateUsers (state, users) {\r\n  const nextState = produce(state, draftState => {\r\n    let filteredUsers = draftState.users.filter(filterUser => {\r\n      return (users.findIndex((user => user.username === filterUser.username)) !== -1)\r\n    })\r\n    draftState.users = uniqueConcat(filteredUsers.concat(users))\r\n  })\r\n\r\n  return {\r\n    ...state,\r\n    users: nextState.users,\r\n\r\n  }\r\n}\r\n\r\nfunction setPendingMessage (state, from, pending) {\r\n  const nextState = produce(state, draftState => {\r\n    let userIndex = draftState.users.findIndex((user => user.username === from))\r\n    if (pending === 0) {\r\n      draftState.users[userIndex].pending = 0\r\n    } else {\r\n      draftState.users[userIndex].pending += 1\r\n    }\r\n  })\r\n  return {\r\n    ...state,\r\n    users: nextState.users\r\n  }\r\n}\r\n\r\nfunction setActiveChat (state, activeChat) {\r\n  return {\r\n    ...state,\r\n    activeChat: activeChat\r\n  }\r\n}\r\n\r\nfunction sendMessage (state, message) {\r\n  return {\r\n    ...state,\r\n    messages: state.messages.concat([message])\r\n  }\r\n}\r\n\r\nfunction getMessages (state, messages) {\r\n  return {\r\n    ...state,\r\n    messages: messages\r\n  }\r\n}\r\n\r\nfunction uniqueConcat (mergedArray) {\r\n  let updatedArray = mergedArray.concat()\r\n  for (let i = 0; i < updatedArray.length; ++i) {\r\n    for (let j = i + 1; j < updatedArray.length; ++j) {\r\n      if (updatedArray[i].username === updatedArray[j].username) {\r\n        updatedArray.splice(j--, 1)\r\n      }\r\n    }\r\n  }\r\n  return updatedArray\r\n}\r\n\r\nexport default reducer\r\n","import { combineReducers, createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport uiReducer from './reducers/uiReducer'\r\nimport authReducer from './reducers/authReducer'\r\nimport chatReducer from './reducers/chatReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  ui: uiReducer,\r\n  auth: authReducer,\r\n  chat: chatReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store/store'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router, withRouter } from 'react-router-dom'\n\nimport * as serviceWorker from './serviceWorker';\n\nconst Root = withRouter(App)\n\n\n//ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<Provider store={store}><Router><Root/></Router></Provider>, document.getElementById('root'))\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}