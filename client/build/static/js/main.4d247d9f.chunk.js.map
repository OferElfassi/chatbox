{"version":3,"sources":["serverApi/serverApi.js","store/actions/uiActions.js","store/actionTypes.js","store/reducers/uiReducer.js","store/reducers/authReducer.js","store/reducers/chatReducer.js","store/store.js","store/actions/chatActions.js","store/actions/authActions.js","pages/login.js","components/sidePanel.js","components/message.js","components/messagesArea.js","pages/chatUi.js","components/spinner.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","window","location","origin","post","url","body","headers","fetch","method","JSON","stringify","Object","objectSpread","Content-Type","setLoginError","error","type","initialState","isLoading","isSignup","loginError","reducer","state","arguments","length","undefined","action","startLoading","stopLoading","setSignup","token","username","isAuth","socket","authData","authState","users","messages","activeChat","nextState","produce","draftState","filteredUsers","filter","filterUser","findIndex","user","mergedArray","updatedArray","concat","i","j","splice","uniqueConcat","updateUsers","message","sendMessage","getMessages","from","pending","userIndex","setPendingMessage","setActiveChat","rootReducer","combineReducers","ui","uiReducer","auth","authReducer","chat","chatReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","usersArr","map","name","index","parse","localStorage","getItem","handleNewMessage","dispatch","getState","setAuth","signUp","password","uiActions","then","res","status","Error","console","log","catch","err","SocketConnection","loginData","setuser","handleMessage","io","on","data","push","setItem","emit","Login","rePassword","toggleLogin","_this","props","handleChange","event","setState","defineProperty","target","value","handleSubmit","_callee","_this$state","regenerator_default","a","wrap","_context","prev","next","preventDefault","validateForm","signup","login","authStateChanged","stop","isLogin","_this$state2","react_default","createElement","className","onSubmit","this","placeholder","onChange","style","fontSize","color","onClick","Component","connect","actions","_ref","asyncToGenerator","mark","resData","ServerApi","sent","json","chatActions","t0","_x","apply","errorMsg","SidePanel","cursor","onLogout","onUserClick","key","Message","itsMe","messageFrom","moment","Number","messageTime","fromNow","messageContent","width","MessagesArea","ref","msgBoxRef","components_message","content","time","currentUser","onMessageChanged","aria-label","aria-describedby","inputText","onSendMessage","id","ChatUi","messageInput","handleLogout","logout","handelUserClick","toggleActiveChat","prevState","handleMessageChange","handleSendMessage","to","getMsgBoxRef","node","componentDidUpdate","scrollTop","scrollHeight","sidePanel","usersList","backgroundColor","messagesArea","removeItem","Date","now","toString","Spinner","App","onAuthStateChanged","history","_this2","autoLogin","_this3","spinner","react_router","exact","path","render","chatUi","assign","pages_login","_ref2","_callee2","_context2","Authorization","_x2","Boolean","hostname","match","Root","withRouter","ReactDOM","es","react_router_dom","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d247d9f.chunk.js","sourcesContent":["\r\nlet baseUrl = window.location.origin\r\n //let baseUrl = \"http://localhost:5000\"\r\n\r\n  export const get = (url) => {\r\n    return fetch(baseUrl + url, {method: 'GET'})\r\n\r\n  }\r\n    export const put = (url, body) => {\r\n    return fetch(baseUrl + url, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(body),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n  }\r\n\r\n export const post = (url, body,headers) => {\r\n    return fetch(baseUrl + url, {\r\n      method: 'POST',\r\n      body: JSON.stringify(body),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...headers\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import *as actionTypes from '../actionTypes'\r\n\r\nexport const startLoading = () => {\r\n  return {\r\n    type: actionTypes.UI_START_LOADING,\r\n  };\r\n};\r\n\r\nexport const stopLoading = () => {\r\n  return {\r\n    type: actionTypes.UI_STOP_LOADING,\r\n  };\r\n};\r\nexport const setSignup = isSignup => {\r\n  return {\r\n    type: actionTypes.IS_SIGNUP,\r\n    isSignup:isSignup\r\n  };\r\n};\r\nexport const setLoginError = error => {\r\n  return {\r\n    type: actionTypes.UI_SET_LOGIN_ERROR,\r\n    error:error\r\n  };\r\n};\r\n","export const UI_START_LOADING = 'UI_START_LOADING'\r\nexport const UI_STOP_LOADING = 'UI_STOP_LOADING'\r\nexport const UI_SET_LOGIN_ERROR = 'UI_SET_LOGIN_ERROR'\r\nexport const IS_SIGNUP = 'IS_SIGNUP'\r\nexport const SET_AUTH = 'SET_AUTH'\r\nexport const SET_USERS = 'SET_USERS'\r\nexport const SEND_MESSAGE = 'SEND_MESSAGE'\r\nexport const GET_MESSAGES = 'GET_MESSAGES'\r\nexport const SET_PENDING_MESSAGE = 'SET_PENDING_MESSAGE'\r\nexport const SET_ACTIVE_CHAT = 'SET_ACTIVE_CHAT'\r\n\r\n\r\n","import * as actionTypes from '../actionTypes'\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isSignup:false,\r\n  loginError:\"\"\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  if (action.type === actionTypes.UI_START_LOADING) {\r\n    return startLoading(state, action)\r\n  }\r\n  else if (action.type === actionTypes.UI_STOP_LOADING) {\r\n    return stopLoading(state, action)\r\n  }\r\n  else if (action.type === actionTypes.IS_SIGNUP) {\r\n    return setSignup(state, action.isSignup)\r\n  }\r\n  else if (action.type === actionTypes.UI_SET_LOGIN_ERROR) {\r\n    return setLoginError(state, action.error)\r\n  }\r\n  else {\r\n    return state\r\n  }\r\n}\r\n\r\nfunction startLoading (state, action) {\r\n  return {\r\n    ...state,\r\n    isLoading: true\r\n  }\r\n}\r\nfunction stopLoading (state, action) {\r\n  return {\r\n    ...state,\r\n    isLoading: false\r\n  }\r\n}\r\nfunction setSignup (state, isSignup) {\r\n  return {\r\n    ...state,\r\n    isSignup: isSignup,\r\n    loginError:\"\"\r\n  }\r\n}\r\nfunction setLoginError (state, error) {\r\n  return {\r\n    ...state,\r\n    loginError: error\r\n  }\r\n}\r\nexport default reducer\r\n","import * as actionTypes from '../actionTypes'\r\n\r\nconst initialState = {\r\n  token:\"\",\r\n  username:\"\",\r\n  isAuth:false,\r\n  socket:{}\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  if (action.type === actionTypes.SET_AUTH) {\r\n\r\n    return setAuth(state, action.authData)\r\n  }\r\n  else {\r\n    return state\r\n  }\r\n}\r\n\r\nfunction setAuth (state,authData) {\r\n  return {\r\n\r\n    token:authData.token,\r\n    username:authData.username,\r\n    isAuth: authData.authState,\r\n    socket:authData.socket\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import * as actionTypes from '../actionTypes'\r\nimport produce from 'immer'\r\n\r\nconst initialState = {\r\n  users: [],\r\n  messages: [],\r\n  activeChat: ''\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  if (action.type === actionTypes.SET_USERS) {\r\n    return updateUsers(state, action.users)\r\n  }\r\n  else if (action.type === actionTypes.SEND_MESSAGE) {\r\n    return sendMessage(state, action.message)\r\n  }\r\n  else if (action.type === actionTypes.GET_MESSAGES) {\r\n    return getMessages(state, action.messages)\r\n  }\r\n  else if (action.type === actionTypes.SET_PENDING_MESSAGE) {\r\n    return setPendingMessage(state, action.from, action.pending)\r\n  }\r\n  else if (action.type === actionTypes.SET_ACTIVE_CHAT) {\r\n    return setActiveChat(state, action.activeChat)\r\n  }\r\n  else {\r\n    return state\r\n  }\r\n}\r\n\r\nfunction updateUsers (state, users) {\r\n  const nextState = produce(state, draftState => {\r\n    let filteredUsers = draftState.users.filter(filterUser => {\r\n      return (users.findIndex((user => user.username === filterUser.username)) !== -1)\r\n    })\r\n    draftState.users = uniqueConcat(filteredUsers.concat(users))\r\n  })\r\n\r\n  return {\r\n    ...state,\r\n    users: nextState.users,\r\n\r\n  }\r\n}\r\n\r\nfunction setPendingMessage (state, from, pending) {\r\n  const nextState = produce(state, draftState => {\r\n    let userIndex = draftState.users.findIndex((user => user.username === from))\r\n    if (pending === 0) {\r\n      draftState.users[userIndex].pending = 0\r\n    } else {\r\n      draftState.users[userIndex].pending += 1\r\n    }\r\n  })\r\n  return {\r\n    ...state,\r\n    users: nextState.users\r\n  }\r\n}\r\n\r\nfunction setActiveChat (state, activeChat) {\r\n  return {\r\n    ...state,\r\n    activeChat: activeChat\r\n  }\r\n}\r\n\r\nfunction sendMessage (state, message) {\r\n  return {\r\n    ...state,\r\n    messages: state.messages.concat([message])\r\n  }\r\n}\r\n\r\nfunction getMessages (state, messages) {\r\n  return {\r\n    ...state,\r\n    messages: messages\r\n  }\r\n}\r\n\r\nfunction uniqueConcat (mergedArray) {\r\n  let updatedArray = mergedArray.concat()\r\n  for (let i = 0; i < updatedArray.length; ++i) {\r\n    for (let j = i + 1; j < updatedArray.length; ++j) {\r\n      if (updatedArray[i].username === updatedArray[j].username) {\r\n        updatedArray.splice(j--, 1)\r\n      }\r\n    }\r\n  }\r\n  return updatedArray\r\n}\r\n\r\nexport default reducer\r\n","import { combineReducers, createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport uiReducer from './reducers/uiReducer'\r\nimport authReducer from './reducers/authReducer'\r\nimport chatReducer from './reducers/chatReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  ui: uiReducer,\r\n  auth: authReducer,\r\n  chat: chatReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n","import *as actionTypes from '../actionTypes'\r\nimport * as ServerApi from '../../serverApi/serverApi'\r\nimport store from '../store'\r\n\r\nexport const updateUsers = users => {\r\n  let usersArr =[]\r\n  if(users){\r\n\r\n    usersArr = users.map((name, index) => {\r\n      return {username: name, pending: 0}\r\n    })\r\n  }\r\n\r\n\r\n  return {\r\n    type: actionTypes.SET_USERS,\r\n    users: usersArr,\r\n  }\r\n}\r\nexport const sendMessage = message => {\r\n  const {socket} = store.getState().auth\r\n  message.time = Date.now().toString()\r\n  let messages = JSON.parse(localStorage.getItem(message.to))\r\n  if (messages) {\r\n    messages.push(message)\r\n  } else {\r\n    messages = [message]\r\n\r\n  }\r\n  localStorage.setItem(message.to, JSON.stringify(messages))\r\n  socket.emit('msg', message)\r\n  return {\r\n    type: actionTypes.SEND_MESSAGE,\r\n    message: message,\r\n  }\r\n}\r\nexport const getMessages = (from) => {\r\n  let messages = JSON.parse(localStorage.getItem(from))\r\n  return {\r\n    type: actionTypes.GET_MESSAGES,\r\n    messages: messages || []\r\n  }\r\n}\r\nexport const setActiveChat = (activeChat) => {\r\n\r\n  return {\r\n    type: actionTypes.SET_ACTIVE_CHAT,\r\n    activeChat: activeChat\r\n  }\r\n}\r\nexport const handleNewMessage = (from) => {\r\n  return dispatch => {\r\n    const {activeChat} = store.getState().chat\r\n    if (activeChat === from) {\r\n      dispatch(getMessages(from))\r\n    } else {\r\n      dispatch(setPendingMessage(from, 1))\r\n    }\r\n  }\r\n}\r\nexport const setPendingMessage = (from, pending) => {\r\n  return {\r\n    type: actionTypes.SET_PENDING_MESSAGE,\r\n    from: from,\r\n    pending: pending\r\n  }\r\n}\r\nexport const getUsers = (username, password) => {\r\n  return dispatch => {\r\n    ServerApi.get('/users/userslist').then(res => {\r\n      if (res.length !== 0) {\r\n        dispatch(updateUsers(res))\r\n      }\r\n    })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\n\r\n","import io from 'socket.io-client'\r\nimport *as actionTypes from '../actionTypes'\r\nimport * as ServerApi from '../../serverApi/serverApi'\r\nimport * as uiActions from './uiActions'\r\nimport * as chatActions from './chatActions'\r\nimport store from '../store'\r\nexport const setAuth = authData => {\r\n  return {\r\n    type: actionTypes.SET_AUTH,\r\n    authData: authData,\r\n  }\r\n}\r\nexport const logOut = () => {\r\n  const {socket} = store.getState().auth\r\n  socket.emit(\"logout\")\r\n  return dispatch => {\r\n    dispatch(setAuth({\r\n      authState: false,\r\n      username: '',\r\n      token: '',\r\n      socket: {}\r\n    }))\r\n    localStorage.removeItem('token')\r\n  }\r\n}\r\n\r\nexport const signUp = (username, password) => {\r\n  return dispatch => {\r\n    dispatch(uiActions.startLoading())\r\n    dispatch(uiActions.setLoginError(''))\r\n    ServerApi.put(`/auth/signup`, {name: username, password: password})\r\n      .then(res => {\r\n        if (res.status === 422) {\r\n          throw new Error(\r\n            'Validation failed. Make sure the email address isn\\'t used yet!'\r\n          )\r\n        }\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          console.log('Error!')\r\n          throw new Error('Creating a user failed!')\r\n        }\r\n        dispatch(uiActions.stopLoading())\r\n        dispatch({type: actionTypes.IS_SIGNUP, isSignup: false})\r\n      })\r\n      .catch(err => {\r\n        dispatch(uiActions.stopLoading())\r\n        dispatch(uiActions.setLoginError(err.message))\r\n      })\r\n  }\r\n}\r\n\r\nexport const login = (username, password) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(uiActions.startLoading())\r\n      dispatch(uiActions.setLoginError(''))\r\n      let res = await ServerApi.post('/auth/login', {name: username, password: password})\r\n      if (res.status === 422) {\r\n        throw new Error('Not a member of ChatBox')\r\n      }\r\n      if (res.status === 401) {\r\n        throw new Error('Wrong password')\r\n      }\r\n      if (res.status !== 200 && res.status !== 201) {\r\n        console.log('Error!', res.status)\r\n        throw new Error('Could not authenticate you!')\r\n      }\r\n      const resData = await res.json()\r\n      const token = resData.token\r\n      localStorage.setItem('token', token)\r\n      // console.log(resData)\r\n      SocketConnection(resData,users=>{\r\n        dispatch(chatActions.updateUsers(users))\r\n      },(socket)=>{\r\n        dispatch(setAuth({\r\n          authState: true,\r\n          username: username,\r\n          token: token,\r\n          socket: socket\r\n        }))\r\n      },(from)=>{\r\n        dispatch(chatActions.handleNewMessage(from))\r\n      })\r\n      dispatch(uiActions.stopLoading())\r\n    } catch (err) {\r\n      dispatch(uiActions.stopLoading())\r\n      dispatch(uiActions.setLoginError(err.message))\r\n    }\r\n\r\n  }\r\n}\r\nexport const autoLogin = (token) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(uiActions.startLoading())\r\n      let res = await ServerApi.post('/auth/autologin', {}, {Authorization: 'Bearer ' + token})\r\n      if (res.status === 401) {\r\n        throw new Error('Validation failed.')\r\n      }\r\n      if (res.status !== 200 && res.status !== 201) {\r\n        console.log('Error!', res.status)\r\n        throw new Error('Could not authenticate you!')\r\n      }\r\n      const resData = await res.json()\r\n\r\n      SocketConnection(resData,users=>{\r\n        dispatch(chatActions.updateUsers(users))\r\n      },(socket)=>{\r\n        dispatch(setAuth({\r\n          authState: true,\r\n          username: resData.username,\r\n          token: token,\r\n          socket: socket\r\n        }))\r\n      },(from)=>{\r\n        dispatch(chatActions.handleNewMessage(from))\r\n      })\r\n      dispatch(uiActions.stopLoading())\r\n    } catch (e) {\r\n      dispatch(uiActions.stopLoading())\r\n      console.log(e)\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\nconst SocketConnection=(loginData,updateUsers,setuser,handleMessage)=>{\r\n\r\nconst socket = io(window.location.origin)\r\n  //const socket = io(\"http://localhost:5000\")\r\n  setuser(socket)\r\n\r\n\r\n  socket.on('users', (data) => {\r\n\r\n    let users = JSON.parse(data)\r\n    updateUsers(users)\r\n  })\r\n  socket.on('new_message', (data) => {\r\n    let message = JSON.parse(data)\r\n\r\n    let messages = JSON.parse(localStorage.getItem(message.from))\r\n    if (messages) {\r\n\r\n      messages.push(message)\r\n    } else {\r\n      messages = [message]\r\n\r\n    }\r\n    localStorage.setItem(message.from, JSON.stringify(messages))\r\n    handleMessage(message.from)\r\n  })\r\n  socket.emit('logged_in', {username: loginData.username})\r\n  updateUsers(loginData.users)\r\n  localStorage.setItem('username', loginData.username)\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../store/actions'\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    isSignup: false,\r\n    username: '',\r\n    password: '',\r\n    rePassword: '',\r\n  }\r\n\r\n  toggleLogin = () => {\r\n    this.props.setSignup(!this.props.isSignup)\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({[event.target.name]: event.target.value})\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n\r\n    const {username,password} = this.state\r\n\r\n    if (this.props.isSignup) {\r\n     if( this.validateForm(false)){\r\n       this.props.signup(username,password)\r\n     }\r\n    }\r\n    else {\r\n      if( this.validateForm(true)){\r\n        this.props.login(username,password).then(()=>{\r\n          this.props.authStateChanged()\r\n        })\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n  validateForm = (isLogin)=>{\r\n    let error=\"\"\r\n    const {username,password,rePassword} = this.state\r\n    if(password===\"\" ||  username === \"\"){\r\n      error = \"All fields are required\"\r\n    }\r\n     else if (!isLogin && rePassword!==password){\r\n        error=\"The two passwords do not match\"\r\n    }\r\n\r\n     if(error!==\"\"){\r\n      this.props.setLoginError(error)\r\n       return false\r\n    }\r\n    else {\r\n       return true\r\n     }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"container  \">\r\n\r\n        <div className={'row'}>\r\n\r\n          <div className={'center-form'}>\r\n\r\n            <div className=\"col-sm-12 col-md-10 col-md-offset-1\">\r\n              <p className={'home-logo text-center mt-4 text-muted'}><i className=\"fas fa-cube\"></i> ChatBox</p>\r\n              {/*<i className=\"fas fa-cube\"></i><h2>ChatBox</h2>*/}\r\n              <form onSubmit={this.handleSubmit}>\r\n                <div className=\"form-group input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\"> <i className=\"fa fa-user\"></i> </span>\r\n                  </div>\r\n                  <input name=\"username\"\r\n                         className=\"form-control\"\r\n                         placeholder=\"Username\"\r\n                         type=\"text\"\r\n                         onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"form-group input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\"> <i className=\"fa fa-lock\"></i> </span>\r\n                  </div>\r\n                  <input name={'password'}\r\n                         className=\"form-control\"\r\n                         placeholder=\"Password\"\r\n                         type=\"password\"\r\n                         onChange={this.handleChange}/>\r\n                </div>\r\n                {this.props.isSignup ?\r\n                  <div className=\"form-group input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\"> <i className=\"fa fa-lock\"></i> </span>\r\n                    </div>\r\n                    <input name={'rePassword'}\r\n                           className=\"form-control\"\r\n                           placeholder=\"Repeat password\"\r\n                           type=\"password\"\r\n                           onChange={this.handleChange}/>\r\n                  </div> : null\r\n                }\r\n\r\n                <div className=\"form-group\">\r\n                  <button type=\"submit\"\r\n                          className=\"btn btn-primary btn-block\"> {this.props.isSignup ? 'Create Account' : 'Log In'}</button>\r\n                </div>\r\n              </form>\r\n              <p className=\"text-center my-0\" style={{\"fontSize\":\"0.8rem\",color:\"red\"}}>{this.props.loginError}</p>\r\n              <br/>\r\n              <p className=\"text-center\">\r\n                {this.props.isSignup ? 'Have an account?' : 'Don\\'t have an account?'}\r\n                <button className={'btn btn-link mb-1'}\r\n                        onClick={this.toggleLogin}>\r\n                  {this.props.isSignup ? 'Log In' : 'Signup'}\r\n                </button>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isSignup: state.ui.isSignup,\r\n    loginError:state.ui.loginError\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setSignup: (isSignup)=> dispatch(actions.setSignup(isSignup)),\r\n    login:(username,password)=>dispatch(actions.login(username,password)),\r\n    signup:(username,password)=>dispatch(actions.signUp(username,password)),\r\n    setLoginError:(errorMsg)=>dispatch(actions.setLoginError(errorMsg))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n","import React from 'react'\r\n\r\nconst SidePanel = (props) => (\r\n  <div className=\"container\">\r\n    <div className=\"row\">\r\n      <div className=\"col\">\r\n        <p className={'side-logo text-center mt-4'}><i\r\n          className=\"fas fa-cube\"></i> ChatBox</p>\r\n        <div className=\"dropdown\">\r\n          <button className=\"dropbtn\"><i className=\"fas fa-user mr-3\"></i>{props.username}<i\r\n            className=\"fas fa-angle-down ml-3\"></i>\r\n          </button>\r\n          <div className=\"dropdown-content\">\r\n            <div style={{cursor: 'pointer'}}\r\n                 onClick={props.onLogout}>Log Out<i\r\n              className=\"ml-3 fas fa-sign-out-alt\"></i></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"row\">\r\n      <p className={'mt-3 font-weight-bold text-white text-muted'}>Online users list</p>\r\n    </div>\r\n    {props.users.map((user, index) =>\r\n      {return(props.username!==user.username)&&(<div className={props.activeChat === user.username?\"active row user-list-item ml-1\":\"row user-list-item ml-1\"}\r\n           onClick={()=>props.onUserClick(user.username)}\r\n           key={index}>{props.activeChat===user.username? <i className=\"fas fa-user-ninja mr-3 pt-1 mb-3\"></i>:\r\n        <i className=\"far fa-user mr-3 pt-1 mb-3 my-auto\"></i>}{user.username}\r\n        { user.pending !==0?\r\n          <label  className=\"badge badge-pill badge-warning ml-auto\">{user.pending}</label >:null} </div>)}\r\n    )}\r\n\r\n  </div>\r\n\r\n)\r\n\r\nexport default SidePanel\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment'\r\nconst Message = (props)=>(\r\n  <div className=\"row mt-1\" >\r\n    <div className=\"col-1\">\r\n      {props.itsMe?<i\r\n          className=\"far fa-user mt-2 \"\r\n          style={{\"fontSize\":40}}></i>:\r\n        <i className=\"fas fa-user-ninja mt-2 \"\r\n           style={{\"fontSize\":40}}></i>}\r\n\r\n    </div>\r\n    <div className=\"col-11\">\r\n      <div className=\"row\">\r\n        <p className={\"font-weight-bold text-monospace\"}\r\n           style={{\"fontSize\":12}}>{props.messageFrom}</p>\r\n\r\n        <p className={\"text-muted ml-1 font-italic\"}\r\n           style={{\"fontSize\":12}}>{moment(Number(props.messageTime)).fromNow()}</p>\r\n      </div>\r\n      <div className=\"row\">\r\n        <p style={{\"fontSize\":12}}>{props.messageContent}</p>\r\n\r\n      </div>\r\n    </div>\r\n    <hr style={{width:\"80%\"}}/>\r\n  </div>\r\n)\r\n\r\nMessage.propTypes ={\r\n  messageFrom:PropTypes.string,\r\n  messageTime:PropTypes.string,\r\n  messageContent:PropTypes.string,\r\n  itsMe:PropTypes.bool\r\n}\r\n\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Message from './message'\r\n\r\nconst MessagesArea = (props) => (\r\n  <div className=\"container\">\r\n    <div className=\"row\">\r\n      <div className=\"col-12 mt-3 chat-header\">\r\n        <p className={'mt-3'}>Chatting with <i className=\"fas fa-long-arrow-alt-right mr-2\"></i>{props.activeChat}</p>\r\n      </div>\r\n    </div>\r\n    <div className=\"row\">\r\n      <div className=\"col-12 mt-3 chat-area\" ref={props.msgBoxRef}>\r\n        {props.messages.map((message, index) =>\r\n          <Message key={index}\r\n                   messageFrom={message.from}\r\n                   messageContent={message.content}\r\n                   messageTime={message.time}\r\n                   itsMe={props.currentUser === message.from}/>\r\n        )}\r\n\r\n      </div>\r\n    </div>\r\n    <div className=\"row\">\r\n      <div className=\"input-group mb-3 mt-5\">\r\n        <input type=\"text\"\r\n               className=\"form-control\"\r\n               onChange={props.onMessageChanged}\r\n               aria-label=\"Example text with button addon\"\r\n               aria-describedby=\"button-addon1\"\r\n        value={props.inputText}\r\n        />\r\n        <div className=\"input-group-append\">\r\n          <button onClick={props.onSendMessage}\r\n                  className=\"btn btn-outline-primary\"\r\n                  type=\"button\"\r\n                  id=\"button-addon1\">Send\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n)\r\n\r\nMessagesArea.propTypes = {\r\n  onSendMessage: PropTypes.func,\r\n  onMessageChanged: PropTypes.func,\r\n  activeChat: PropTypes.string,\r\n  messages: PropTypes.array,\r\n  currentUser: PropTypes.string,\r\n  inputText: PropTypes.string,\r\n  msgBoxRef: PropTypes.func\r\n}\r\n\r\nexport default MessagesArea\r\n","import React, { Component } from 'react'\r\nimport SidePanel from '../components/sidePanel'\r\nimport MessagesArea from '../components/messagesArea'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../store/actions'\r\n\r\nclass ChatUi extends Component {\r\n  state = {\r\n    messageInput: ''\r\n  }\r\n  msgBoxRef = {}\r\n  handleLogout = async () => {\r\n    await this.props.logout()\r\n    this.props.authStateChanged()\r\n  }\r\n  handelUserClick = (username) => {\r\n\r\n    this.toggleActiveChat(username)\r\n    this.props.getMessages(username)\r\n  }\r\n\r\n  toggleActiveChat = username => {\r\n    this.props.setActiveChat(username)\r\n    this.props.setPendingMessage(username, 0)\r\n    this.setState((prevState) => {\r\n      return {...prevState, messageInput: ''}\r\n    })\r\n\r\n  }\r\n  handleMessageChange = event => {\r\n    let value = event.target.value\r\n\r\n    this.setState((prevState) => {\r\n      return {...prevState, messageInput: value}\r\n    })\r\n  }\r\n  handleSendMessage = () => {\r\n    if (this.state.messageInput !== '') {\r\n      this.props.sendMessage({\r\n        from: this.props.currentUser,\r\n        to: this.props.activeChat,\r\n        content: this.state.messageInput,\r\n        time: ''\r\n      })\r\n      this.setState((prevState) => {\r\n        return {...prevState, messageInput: ''}\r\n      })\r\n    }\r\n  }\r\n  getMsgBoxRef = (node) => {\r\n    this.msgBoxRef = node\r\n  }\r\n  componentDidUpdate = () => {\r\n    this.msgBoxRef.scrollTop = this.msgBoxRef.scrollHeight\r\n  }\r\n\r\n  render () {\r\n\r\n    return (\r\n      <div className=\"row\" style={{width: '100vw'}}>\r\n        <div className=\"col-md-3  side-panel\">\r\n          <SidePanel activeChat={this.props.activeChat}\r\n                     onUserClick={this.handelUserClick}\r\n                     onLogout={this.handleLogout}\r\n                     users={this.props.usersList}\r\n                     username={this.props.currentUser}/>\r\n        </div>\r\n        <div className=\"col-md-9\" style={{'backgroundColor': '#eee'}}>\r\n          {this.props.activeChat !== '' ?\r\n            <MessagesArea messages={this.props.messages}\r\n                          activeChat={this.props.activeChat}\r\n                          onMessageChanged={this.handleMessageChange}\r\n                          onSendMessage={this.handleSendMessage}\r\n                          currentUser={this.props.currentUser}\r\n                          inputText={this.state.messageInput}\r\n                          msgBoxRef={this.getMsgBoxRef}\r\n            /> : null}\r\n\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    usersList: state.chat.users,\r\n    currentUser: state.auth.username,\r\n    messages: state.chat.messages,\r\n    activeChat: state.chat.activeChat\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logout: () => dispatch(actions.logOut()),\r\n    sendMessage: (message) => dispatch(actions.sendMessage(message)),\r\n    getMessages: (from) => dispatch(actions.getMessages(from)),\r\n    setActiveChat: (activeChat) => dispatch(actions.setActiveChat(activeChat)),\r\n    setPendingMessage: (from, pending) => dispatch(actions.setPendingMessage(from, pending))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatUi)\r\n\r\n","import React from 'react'\r\n\r\nconst Spinner = ()=>(\r\n  <div className=\"spinner-border spinner\"></div>\r\n)\r\n\r\nexport default Spinner\r\n","import React, { Component } from 'react'\nimport Login from './pages/login'\nimport ChatUi from './pages/chatUi'\nimport {Switch, Route,  } from 'react-router-dom'\nimport './App.css'\nimport * as actions from './store/actions'\nimport { connect } from 'react-redux'\nimport Spinner from './components/spinner'\n\nclass App extends Component {\n  state = {\n    auth: false\n  }\n  onAuthStateChanged = () => {\n    if (this.props.isAuth) {\n      this.props.history.push('/')\n    } else {\n      this.props.history.push('/login')\n    }\n  }\n\n  componentDidMount () {\n    const token = localStorage.getItem('token')\n    if (token) {\n      this.props.autoLogin(token).then(() => {\n        this.onAuthStateChanged()\n      })\n    }\n    this.onAuthStateChanged()\n  }\n\n  render () {\n\n    return (\n      (this.props.isLoading ) ? <Spinner/> :\n        <Switch>\n          <Route exact path=\"/\" render={(props) => <ChatUi {...props} authStateChanged={this.onAuthStateChanged}/>}/>\n          <Route path=\"/login\" render={(props) => <Login {...props} authStateChanged={this.onAuthStateChanged}/>}/>\n        </Switch>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.isAuth,\n    isLoading: state.ui.isLoading\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAuth: (authState) => dispatch(actions.setAuth(authState)),\n    autoLogin: (token) => dispatch(actions.autoLogin(token))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store/store'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router, withRouter } from 'react-router-dom'\n\nimport * as serviceWorker from './serviceWorker';\n\nconst Root = withRouter(App)\n\n\n//ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<Provider store={store}><Router><Root/></Router></Provider>, document.getElementById('root'))\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}